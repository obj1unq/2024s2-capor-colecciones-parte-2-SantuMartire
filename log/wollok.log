{"level":"info","message":"⌛ Building environment","timeElapsed":248,"timestamp":"2024-09-11T20:17:36.208Z"}
{"level":"info","message":"onRequest - WORKSPACE_URI:file:///c%3A/wvsc/workspace/caposCollectionsParte2TS","timestamp":"2024-09-11T20:17:36.217Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":224,"timestamp":"2024-09-11T20:17:36.442Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":115,"timestamp":"2024-09-11T20:17:36.559Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":131,"timestamp":"2024-09-11T20:17:36.692Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":138,"timestamp":"2024-09-11T20:17:36.836Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":141,"timestamp":"2024-09-11T20:17:36.980Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":273,"timestamp":"2024-09-11T20:17:37.254Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":236,"timestamp":"2024-09-11T20:17:37.492Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":227,"timestamp":"2024-09-11T20:17:37.720Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":216,"timestamp":"2024-09-11T20:17:37.937Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":200,"timestamp":"2024-09-11T20:17:38.137Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":208,"timestamp":"2024-09-11T20:17:38.355Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":193,"timestamp":"2024-09-11T20:17:38.555Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":202,"timestamp":"2024-09-11T20:17:38.758Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":134,"timestamp":"2024-09-11T20:17:38.892Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":129,"timestamp":"2024-09-11T20:17:39.021Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":134,"timestamp":"2024-09-11T20:17:39.155Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":122,"timestamp":"2024-09-11T20:17:39.278Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":156,"timestamp":"2024-09-11T20:17:39.435Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":132,"timestamp":"2024-09-11T20:17:39.567Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":125,"timestamp":"2024-09-11T20:17:39.693Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":139,"timestamp":"2024-09-11T20:17:39.832Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":146,"timestamp":"2024-09-11T20:17:39.979Z"}
{"failures":[],"level":"info","message":"🧪 Test runner executed on c:\\wvsc\\workspace\\caposCollectionsParte2TS","result":{"failed":0,"ok":1},"timeElapsed":670,"timestamp":"2024-09-11T20:19:23.892Z"}
{"failures":[{"error":["wollok.lang.EvaluationError wrapping TypeScript Error: Could not resolve reference to bendicion or its a reference to void","  at src.libroHechizos.\"libro\" [src/libroHechizos.wtest:3]"],"test":"src.libroHechizos.\"libro\""}],"level":"info","message":"🧪 Test runner executed on c:\\wvsc\\workspace\\caposCollectionsParte2TS","result":{"failed":1,"ok":0},"timeElapsed":682,"timestamp":"2024-09-11T20:19:29.569Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":317,"timestamp":"2024-09-11T22:07:49.348Z"}
{"level":"info","message":"onRequest - WORKSPACE_URI:file:///c%3A/Users/martu/Desktop/UNQ/2024/2do_Cuatrimestre/POO_I/Practicas/Repositorios/2024s2-capor-colecciones-parte-2-SantuMartire","timestamp":"2024-09-11T22:07:49.373Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":259,"timestamp":"2024-09-11T22:07:49.635Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":270,"timestamp":"2024-09-11T22:07:49.929Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":342,"timestamp":"2024-09-11T22:07:50.288Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":223,"timestamp":"2024-09-11T22:07:50.525Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":184,"timestamp":"2024-09-11T22:07:50.721Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":382,"timestamp":"2024-09-11T22:07:51.106Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":353,"timestamp":"2024-09-11T22:07:51.460Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":538,"timestamp":"2024-09-11T22:07:52.001Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":787,"timestamp":"2024-09-11T22:07:52.879Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":554,"timestamp":"2024-09-11T22:07:53.433Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":577,"timestamp":"2024-09-11T22:07:54.025Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":333,"timestamp":"2024-09-11T22:07:54.370Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":181,"timestamp":"2024-09-11T22:07:54.555Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":140,"timestamp":"2024-09-11T22:07:54.702Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":166,"timestamp":"2024-09-11T22:07:54.868Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":149,"timestamp":"2024-09-11T22:07:55.018Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":559,"timestamp":"2024-09-16T18:37:56.002Z"}
{"level":"info","message":"onRequest - WORKSPACE_URI:file:///c%3A/Users/martu/Desktop/UNQ/2024/2do_Cuatrimestre/POO_I/Practicas/Repositorios/2024s2-capor-colecciones-parte-2-SantuMartire","timestamp":"2024-09-16T18:37:56.303Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":475,"timestamp":"2024-09-16T18:37:56.780Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":401,"timestamp":"2024-09-16T18:37:57.209Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":390,"timestamp":"2024-09-16T18:37:57.671Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":327,"timestamp":"2024-09-16T18:37:58.000Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":313,"timestamp":"2024-09-16T18:37:58.314Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":792,"timestamp":"2024-09-16T18:37:59.107Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":585,"timestamp":"2024-09-16T18:37:59.696Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":403,"timestamp":"2024-09-16T18:38:00.107Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":682,"timestamp":"2024-09-16T18:38:00.821Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":397,"timestamp":"2024-09-16T18:38:01.221Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":298,"timestamp":"2024-09-16T18:38:01.522Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":245,"timestamp":"2024-09-16T18:38:01.769Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":260,"timestamp":"2024-09-16T18:38:02.031Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":194,"timestamp":"2024-09-16T18:38:02.227Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":143,"timestamp":"2024-09-16T18:38:02.373Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":135,"timestamp":"2024-09-16T18:38:02.508Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":465,"timestamp":"2024-09-18T16:08:24.957Z"}
{"level":"info","message":"onRequest - WORKSPACE_URI:file:///c%3A/Users/martu/Desktop/UNQ/2024/2do_Cuatrimestre/POO_I/Practicas/Repositorios/2024s2-capor-colecciones-parte-2-SantuMartire","timestamp":"2024-09-18T16:08:24.967Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":222,"timestamp":"2024-09-18T16:08:25.190Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":156,"timestamp":"2024-09-18T16:08:25.351Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":121,"timestamp":"2024-09-18T16:08:25.473Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":360,"timestamp":"2024-09-18T16:08:25.836Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":170,"timestamp":"2024-09-18T16:08:26.008Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":245,"timestamp":"2024-09-18T16:08:26.256Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":246,"timestamp":"2024-09-18T16:08:26.505Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":208,"timestamp":"2024-09-18T16:08:26.751Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":189,"timestamp":"2024-09-18T16:08:26.940Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":240,"timestamp":"2024-09-18T16:08:27.181Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":252,"timestamp":"2024-09-18T16:08:27.437Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":222,"timestamp":"2024-09-18T16:08:27.660Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":216,"timestamp":"2024-09-18T16:08:27.879Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":139,"timestamp":"2024-09-18T16:08:28.019Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":340,"timestamp":"2024-09-18T16:08:28.366Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":232,"timestamp":"2024-09-18T16:08:28.599Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":461,"timestamp":"2024-09-18T16:11:45.692Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":246,"timestamp":"2024-09-18T16:11:45.942Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":130,"timestamp":"2024-09-18T16:11:46.073Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":126,"timestamp":"2024-09-18T16:11:46.200Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":148,"timestamp":"2024-09-18T16:11:46.349Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":250,"timestamp":"2024-09-18T16:15:55.148Z"}
{"level":"info","message":"onRequest - WORKSPACE_URI:file:///c%3A/Users/martu/Desktop/UNQ/2024/2do_Cuatrimestre/POO_I/Practicas/Repositorios/2024s2-capor-colecciones-parte-2-SantuMartire","timestamp":"2024-09-18T16:15:55.155Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":205,"timestamp":"2024-09-18T16:15:55.362Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":180,"timestamp":"2024-09-18T16:15:55.545Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":140,"timestamp":"2024-09-18T16:15:55.697Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":151,"timestamp":"2024-09-18T16:15:55.857Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":183,"timestamp":"2024-09-18T16:15:56.042Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":248,"timestamp":"2024-09-18T16:15:56.291Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":209,"timestamp":"2024-09-18T16:15:56.503Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":189,"timestamp":"2024-09-18T16:15:56.712Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":168,"timestamp":"2024-09-18T16:15:56.883Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":179,"timestamp":"2024-09-18T16:15:57.063Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":206,"timestamp":"2024-09-18T16:15:57.272Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":170,"timestamp":"2024-09-18T16:15:57.443Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":146,"timestamp":"2024-09-18T16:15:57.590Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":189,"timestamp":"2024-09-18T16:15:57.782Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":258,"timestamp":"2024-09-18T16:15:58.046Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":153,"timestamp":"2024-09-18T16:15:58.200Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":146,"timestamp":"2024-09-18T16:16:34.569Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":171,"timestamp":"2024-09-18T16:16:34.742Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":179,"timestamp":"2024-09-18T16:16:35.741Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":179,"timestamp":"2024-09-18T16:16:35.922Z"}
{"errors":{"errors":[null,["/*\r","lista.head() //Devuelve el primer elemento de la lista.\r","lista.last()  //Devuelve el último elemento de una lista\r","lista.get(nro) //Devuelve el nro elemento dado (de 0 a size - 1), debe haber al menos nro elementos.\r","lista.reverse() //Devuelve una lista con los elementos invertidos de la original.\r","coleccion.asSet() / asList() //Devuelve una nueva colección pero como un conjunto o una lista (el orden de conjunto a lista no tiene reglas establecidas).\r","coleccion.clear() //Elimina todas las referecias de una colección (la vacía)\r","coleccion.copy() //Devuelve una copia de la lista.\r","coleccion.add(object) // agrega el elemento a la colección dada, en el casod e una lista lo agrega al final, si es un conjunto y ya estaba simplemente queda como está\r","coleccion.remove(object) // quita 1 una aparición del objeto de la colección si existiese (si no está no hace nada), si hay más de 1 queda una menos.\r","coleccion.addAll(coleccion) //Agrega todos los elementos de una colección dada.\r","coleccion.removeAll(coleccion) //Quita todos los elementos de una colección dada 1 vez.\r","coleccion.contains(cosa) // Indica si existe el objeto en la colección dada al menos 1 vez.\r","coleccion.isEmpty() //Indica si una colección está vacía, es equivalente a \"coleccion.size() > 0\".\r","coleccion.size() // consulta el tamaño de la colección\r","coleccion.count({cosa => cosa.esGrande()}) //Cuenta cuantos elementos son grandes (consulta booleana)!\r","coleccion.any({cosa => cosa.esGrande()}) //Consulta si existe algún objeto que cumpla la caracteristicad dada (consulta booleana).\r","coleccion.all({cosa => cosa.esGigante()}) //Consulta si todos los objetos que cumplen la caracteristicad dada (consulta booleana).\r","coleccion.min() // el objeto que es el máximo para objetos \"ordenables\".\r","coleccion.max() // el objeto que es el mínimo para objetos \"ordenables\".\r","coleccion.min({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el maximo según la carácteristica ordenable, no da el valor máximo si no el objeto!\r","coleccion.max({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el mínimo según la carácteristica ordenable, no da el valor mínimo si no el objeto!\r","coleccion.find({cosa => cosa.esRosa()}) // encuentra y devuelve la \"primer\" cosa rosa.\r","coleccion.anyOne() //Devuelve cualquier elemento de la colección (NO DEBE ESTÁR VACÍA).\r","occurrencesOf(object) //Indica la cantidad de veces que aparece un objeto dado.\r","coleccion.map({cosa => cosa.relleno()}) // Transforma una colección en un lista 1 a 1 con la caracteristica / consulta dada (una lista con el relleno de cada cosa).\r","coleccion.forEach({cosa => cosa.hacer()}) //Realiza las ordene con cada elemento de la colección (si se usa para consulta es un mal uso!).\r","https://www.wollok.org/documentation/language/#wollok.lang.Collection\r"]]},"level":"error","message":"✘ Failed to get type description: Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"lista.head() //Devuelve el primer elemento de la lista.\\r\",\n      \"lista.last()  //Devuelve el último elemento de una lista\\r\",\n      \"lista.get(nro) //Devuelve el nro elemento dado (de 0 a size - 1), debe haber al menos nro elementos.\\r\",\n      \"lista.reverse() //Devuelve una lista con los elementos invertidos de la original.\\r\",\n      \"coleccion.asSet() / asList() //Devuelve una nueva colección pero como un conjunto o una lista (el orden de conjunto a lista no tiene reglas establecidas).\\r\",\n      \"coleccion.clear() //Elimina todas las referecias de una colección (la vacía)\\r\",\n      \"coleccion.copy() //Devuelve una copia de la lista.\\r\",\n      \"coleccion.add(object) // agrega el elemento a la colección dada, en el casod e una lista lo agrega al final, si es un conjunto y ya estaba simplemente queda como está\\r\",\n      \"coleccion.remove(object) // quita 1 una aparición del objeto de la colección si existiese (si no está no hace nada), si hay más de 1 queda una menos.\\r\",\n      \"coleccion.addAll(coleccion) //Agrega todos los elementos de una colección dada.\\r\",\n      \"coleccion.removeAll(coleccion) //Quita todos los elementos de una colección dada 1 vez.\\r\",\n      \"coleccion.contains(cosa) // Indica si existe el objeto en la colección dada al menos 1 vez.\\r\",\n      \"coleccion.isEmpty() //Indica si una colección está vacía, es equivalente a \\\"coleccion.size() > 0\\\".\\r\",\n      \"coleccion.size() // consulta el tamaño de la colección\\r\",\n      \"coleccion.count({cosa => cosa.esGrande()}) //Cuenta cuantos elementos son grandes (consulta booleana)!\\r\",\n      \"coleccion.any({cosa => cosa.esGrande()}) //Consulta si existe algún objeto que cumpla la caracteristicad dada (consulta booleana).\\r\",\n      \"coleccion.all({cosa => cosa.esGigante()}) //Consulta si todos los objetos que cumplen la caracteristicad dada (consulta booleana).\\r\",\n      \"coleccion.min() // el objeto que es el máximo para objetos \\\"ordenables\\\".\\r\",\n      \"coleccion.max() // el objeto que es el mínimo para objetos \\\"ordenables\\\".\\r\",\n      \"coleccion.min({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el maximo según la carácteristica ordenable, no da el valor máximo si no el objeto!\\r\",\n      \"coleccion.max({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el mínimo según la carácteristica ordenable, no da el valor mínimo si no el objeto!\\r\",\n      \"coleccion.find({cosa => cosa.esRosa()}) // encuentra y devuelve la \\\"primer\\\" cosa rosa.\\r\",\n      \"coleccion.anyOne() //Devuelve cualquier elemento de la colección (NO DEBE ESTÁR VACÍA).\\r\",\n      \"occurrencesOf(object) //Indica la cantidad de veces que aparece un objeto dado.\\r\",\n      \"coleccion.map({cosa => cosa.relleno()}) // Transforma una colección en un lista 1 a 1 con la caracteristica / consulta dada (una lista con el relleno de cada cosa).\\r\",\n      \"coleccion.forEach({cosa => cosa.hacer()}) //Realiza las ordene con cada elemento de la colección (si se usa para consulta es un mal uso!).\\r\",\n      \"https://www.wollok.org/documentation/language/#wollok.lang.Collection\\r\"\n    ]\n  ]\n} {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"lista.head() //Devuelve el primer elemento de la lista.\\r\",\n      \"lista.last()  //Devuelve el último elemento de una lista\\r\",\n      \"lista.get(nro) //Devuelve el nro elemento dado (de 0 a size - 1), debe haber al menos nro elementos.\\r\",\n      \"lista.reverse() //Devuelve una lista con los elementos invertidos de la original.\\r\",\n      \"coleccion.asSet() / asList() //Devuelve una nueva colección pero como un conjunto o una lista (el orden de conjunto a lista no tiene reglas establecidas).\\r\",\n      \"coleccion.clear() //Elimina todas las referecias de una colección (la vacía)\\r\",\n      \"coleccion.copy() //Devuelve una copia de la lista.\\r\",\n      \"coleccion.add(object) // agrega el elemento a la colección dada, en el casod e una lista lo agrega al final, si es un conjunto y ya estaba simplemente queda como está\\r\",\n      \"coleccion.remove(object) // quita 1 una aparición del objeto de la colección si existiese (si no está no hace nada), si hay más de 1 queda una menos.\\r\",\n      \"coleccion.addAll(coleccion) //Agrega todos los elementos de una colección dada.\\r\",\n      \"coleccion.removeAll(coleccion) //Quita todos los elementos de una colección dada 1 vez.\\r\",\n      \"coleccion.contains(cosa) // Indica si existe el objeto en la colección dada al menos 1 vez.\\r\",\n      \"coleccion.isEmpty() //Indica si una colección está vacía, es equivalente a \\\"coleccion.size() > 0\\\".\\r\",\n      \"coleccion.size() // consulta el tamaño de la colección\\r\",\n      \"coleccion.count({cosa => cosa.esGrande()}) //Cuenta cuantos elementos son grandes (consulta booleana)!\\r\",\n      \"coleccion.any({cosa => cosa.esGrande()}) //Consulta si existe algún objeto que cumpla la caracteristicad dada (consulta booleana).\\r\",\n      \"coleccion.all({cosa => cosa.esGigante()}) //Consulta si todos los objetos que cumplen la caracteristicad dada (consulta booleana).\\r\",\n      \"coleccion.min() // el objeto que es el máximo para objetos \\\"ordenables\\\".\\r\",\n      \"coleccion.max() // el objeto que es el mínimo para objetos \\\"ordenables\\\".\\r\",\n      \"coleccion.min({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el maximo según la carácteristica ordenable, no da el valor máximo si no el objeto!\\r\",\n      \"coleccion.max({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el mínimo según la carácteristica ordenable, no da el valor mínimo si no el objeto!\\r\",\n      \"coleccion.find({cosa => cosa.esRosa()}) // encuentra y devuelve la \\\"primer\\\" cosa rosa.\\r\",\n      \"coleccion.anyOne() //Devuelve cualquier elemento de la colección (NO DEBE ESTÁR VACÍA).\\r\",\n      \"occurrencesOf(object) //Indica la cantidad de veces que aparece un objeto dado.\\r\",\n      \"coleccion.map({cosa => cosa.relleno()}) // Transforma una colección en un lista 1 a 1 con la caracteristica / consulta dada (una lista con el relleno de cada cosa).\\r\",\n      \"coleccion.forEach({cosa => cosa.hacer()}) //Realiza las ordene con cada elemento de la colección (si se usa para consulta es un mal uso!).\\r\",\n      \"https://www.wollok.org/documentation/language/#wollok.lang.Collection\\r\"\n    ]\n  ]\n}","stack":"Error: {\n  \"errors\": [\n    null,\n    [\n      \"/*\\r\",\n      \"lista.head() //Devuelve el primer elemento de la lista.\\r\",\n      \"lista.last()  //Devuelve el último elemento de una lista\\r\",\n      \"lista.get(nro) //Devuelve el nro elemento dado (de 0 a size - 1), debe haber al menos nro elementos.\\r\",\n      \"lista.reverse() //Devuelve una lista con los elementos invertidos de la original.\\r\",\n      \"coleccion.asSet() / asList() //Devuelve una nueva colección pero como un conjunto o una lista (el orden de conjunto a lista no tiene reglas establecidas).\\r\",\n      \"coleccion.clear() //Elimina todas las referecias de una colección (la vacía)\\r\",\n      \"coleccion.copy() //Devuelve una copia de la lista.\\r\",\n      \"coleccion.add(object) // agrega el elemento a la colección dada, en el casod e una lista lo agrega al final, si es un conjunto y ya estaba simplemente queda como está\\r\",\n      \"coleccion.remove(object) // quita 1 una aparición del objeto de la colección si existiese (si no está no hace nada), si hay más de 1 queda una menos.\\r\",\n      \"coleccion.addAll(coleccion) //Agrega todos los elementos de una colección dada.\\r\",\n      \"coleccion.removeAll(coleccion) //Quita todos los elementos de una colección dada 1 vez.\\r\",\n      \"coleccion.contains(cosa) // Indica si existe el objeto en la colección dada al menos 1 vez.\\r\",\n      \"coleccion.isEmpty() //Indica si una colección está vacía, es equivalente a \\\"coleccion.size() > 0\\\".\\r\",\n      \"coleccion.size() // consulta el tamaño de la colección\\r\",\n      \"coleccion.count({cosa => cosa.esGrande()}) //Cuenta cuantos elementos son grandes (consulta booleana)!\\r\",\n      \"coleccion.any({cosa => cosa.esGrande()}) //Consulta si existe algún objeto que cumpla la caracteristicad dada (consulta booleana).\\r\",\n      \"coleccion.all({cosa => cosa.esGigante()}) //Consulta si todos los objetos que cumplen la caracteristicad dada (consulta booleana).\\r\",\n      \"coleccion.min() // el objeto que es el máximo para objetos \\\"ordenables\\\".\\r\",\n      \"coleccion.max() // el objeto que es el mínimo para objetos \\\"ordenables\\\".\\r\",\n      \"coleccion.min({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el maximo según la carácteristica ordenable, no da el valor máximo si no el objeto!\\r\",\n      \"coleccion.max({objeto => objeto.caracteristicaOrdenable()}) // el objeto que es el mínimo según la carácteristica ordenable, no da el valor mínimo si no el objeto!\\r\",\n      \"coleccion.find({cosa => cosa.esRosa()}) // encuentra y devuelve la \\\"primer\\\" cosa rosa.\\r\",\n      \"coleccion.anyOne() //Devuelve cualquier elemento de la colección (NO DEBE ESTÁR VACÍA).\\r\",\n      \"occurrencesOf(object) //Indica la cantidad de veces que aparece un objeto dado.\\r\",\n      \"coleccion.map({cosa => cosa.relleno()}) // Transforma una colección en un lista 1 a 1 con la caracteristica / consulta dada (una lista con el relleno de cada cosa).\\r\",\n      \"coleccion.forEach({cosa => cosa.hacer()}) //Realiza las ordene con cada elemento de la colección (si se usa para consulta es un mal uso!).\\r\",\n      \"https://www.wollok.org/documentation/language/#wollok.lang.Collection\\r\"\n    ]\n  ]\n}\n    at toError (c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\partial.lenses.validation\\dist\\partial.lenses.validation.cjs.js:102:15)\n    at raise (c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\partial.lenses.validation\\dist\\partial.lenses.validation.cjs.js:108:9)\n    at c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\partial.lenses.validation\\dist\\partial.lenses.validation.cjs.js:387:35\n    at Monad.apply (c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\infestines\\dist\\infestines.cjs.js:242:10)\n    at intersperse (c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\partial.lenses.validation\\dist\\partial.lenses.validation.cjs.js:386:16)\n    at intersperse (c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\infestines\\dist\\infestines.cjs.js:73:14)\n    at splitMetadata (c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\wollok-ts\\dist\\printer\\print.js:354:134)\n    at c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\wollok-ts\\dist\\printer\\print.js:28:22\n    at Array.map (<anonymous>)\n    at c:\\Users\\martu\\.vscode\\extensions\\uqbar.wollok-lsp-ide-0.3.4\\node_modules\\wollok-ts\\dist\\printer\\print.js:33:286","timestamp":"2024-09-18T16:16:43.349Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":207,"timestamp":"2024-09-18T16:17:11.958Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":206,"timestamp":"2024-09-18T16:17:12.167Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":213,"timestamp":"2024-09-18T16:17:21.743Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":236,"timestamp":"2024-09-18T16:17:22.068Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":166,"timestamp":"2024-09-18T16:17:32.756Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":175,"timestamp":"2024-09-18T16:17:32.933Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":189,"timestamp":"2024-09-18T16:17:47.800Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":188,"timestamp":"2024-09-18T16:17:47.989Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":155,"timestamp":"2024-09-18T16:18:09.005Z"}
{"level":"info","message":"⌛ Validating src/enemigo.wlk","timeElapsed":493,"timestamp":"2024-09-18T16:18:09.513Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":204,"timestamp":"2024-09-18T16:18:18.162Z"}
{"level":"info","message":"⌛ Validating src/enemigo.wlk","timeElapsed":200,"timestamp":"2024-09-18T16:18:18.435Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":161,"timestamp":"2024-09-18T16:19:00.381Z"}
{"level":"info","message":"⌛ Validating src/artefacto.wlk","timeElapsed":485,"timestamp":"2024-09-18T16:19:00.875Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":320,"timestamp":"2024-09-18T16:19:05.127Z"}
{"level":"info","message":"⌛ Validating src/artefacto.wlk","timeElapsed":254,"timestamp":"2024-09-18T16:19:05.392Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":339,"timestamp":"2024-09-18T16:19:19.856Z"}
{"level":"info","message":"onRequest - STRONG_FILES_CHANGED:c:\\Users\\martu\\Desktop\\UNQ\\2024\\2do_Cuatrimestre\\POO_I\\Practicas\\Repositorios\\2024s2-capor-colecciones-parte-2-SantuMartire\\src\\artefacto.wlk","timestamp":"2024-09-18T16:19:19.857Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":421,"timestamp":"2024-09-18T16:19:20.279Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":436,"timestamp":"2024-09-18T16:19:20.717Z"}
{"level":"info","message":"⌛ Validating src/artefactos.wlk","timeElapsed":427,"timestamp":"2024-09-18T16:19:21.155Z"}
{"level":"info","message":"Removing diagnostics from \\Users\\martu\\Desktop\\UNQ\\2024\\2do_Cuatrimestre\\POO_I\\Practicas\\Repositorios\\2024s2-capor-colecciones-parte-2-SantuMartire\\src\\artefacto.wlk","timestamp":"2024-09-18T16:19:21.156Z"}
{"level":"info","message":"onRequest - WORKSPACE_URI:file:///c%3A/Users/martu/Desktop/UNQ/2024/2do_Cuatrimestre/POO_I/Practicas/Repositorios/2024s2-capor-colecciones-parte-2-SantuMartire","timestamp":"2024-09-18T16:19:21.159Z"}
{"level":"info","message":"⌛ Building environment","timeElapsed":358,"timestamp":"2024-09-18T16:19:50.384Z"}
{"level":"info","message":"⌛ Validating src/capos.wlk","timeElapsed":225,"timestamp":"2024-09-18T16:19:50.615Z"}
{"level":"info","message":"⌛ Validating src/referencias.wtest","timeElapsed":172,"timestamp":"2024-09-18T16:19:50.789Z"}
{"level":"info","message":"⌛ Validating src/libroHechizos.wtest","timeElapsed":161,"timestamp":"2024-09-18T16:19:50.950Z"}
{"level":"info","message":"⌛ Validating src/enemigos.wtest","timeElapsed":146,"timestamp":"2024-09-18T16:19:51.099Z"}
{"level":"info","message":"⌛ Validating src/batallaYPoder.wtest","timeElapsed":142,"timestamp":"2024-09-18T16:19:51.241Z"}
{"level":"info","message":"⌛ Validating src/enemigo.wlk","timeElapsed":127,"timestamp":"2024-09-18T16:19:51.369Z"}
{"level":"info","message":"⌛ Validating src/artefactos.wlk","timeElapsed":133,"timestamp":"2024-09-18T16:19:51.503Z"}
